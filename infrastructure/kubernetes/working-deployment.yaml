apiVersion: v1
kind: ConfigMap
metadata:
  name: api-code
  namespace: loan-default
data:
  main.py: |
    import time
    import pandas as pd
    import numpy as np
    from fastapi import FastAPI, HTTPException
    from pydantic import BaseModel
    from typing import Dict, Any
    import uvicorn
    
    class PredictionRequest(BaseModel):
        features: Dict[str, Any]
    
    app = FastAPI(title='Loan Default API')
    
    @app.get('/')
    def root():
        return {'message': 'Loan Default API', 'status': 'running', 'version': 'k8s-1.0'}
    
    @app.get('/health')
    def health():
        return {'status': 'healthy', 'timestamp': time.time()}
    
    @app.post('/predict')
    def predict(request: PredictionRequest):
        # Simple mock prediction for demo
        import random
        prediction = random.choice(['good', 'bad'])
        probability = random.uniform(0.6, 0.9)
        
        return {
            'prediction': prediction,
            'probability': probability,
            'model_version': 'k8s-demo',
            'timestamp': time.time()
        }
    
    if __name__ == '__main__':
        uvicorn.run(app, host='0.0.0.0', port=8001)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-default-api
  namespace: loan-default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loan-default-api
  template:
    metadata:
      labels:
        app: loan-default-api
    spec:
      containers:
      - name: api
        image: python:3.10-slim
        command: 
        - /bin/sh
        - -c
        - |
          pip install fastapi uvicorn pydantic pandas numpy &&
          python /app/main.py
        ports:
        - containerPort: 8001
        volumeMounts:
        - name: api-code
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: api-code
        configMap:
          name: api-code
